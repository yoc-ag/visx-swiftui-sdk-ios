// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6.1 (swiftlang-5.6.0.323.66 clang-1316.0.20.12)
// swift-module-flags: -target arm64-apple-ios14.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name VisxSwiftUISDK
import Combine
import Foundation
import Swift
import SwiftUI
import VisxSDK
@_exported import VisxSwiftUISDK
import _Concurrency
public struct VisxView : SwiftUI.View {
  public init(adUnitId: Swift.String, domain: Swift.String, size: VisxSDK.VisxAdSize, universal: Swift.Bool, anchorFrame: CoreGraphics.CGRect? = nil, advertisingLabelText: Swift.String? = nil, loadWithCustomTargetingParameters: [Swift.String : Swift.String]? = nil)
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public func onEvent(action: @escaping (VisxSwiftUISDK.VisxEvents) -> Swift.Void) -> VisxSwiftUISDK.VisxView
  public typealias Body = @_opaqueReturnTypeOf("$s14VisxSwiftUISDK0A4ViewV4bodyQrvp", 0) __
}
final public class VisxInterstitial : Combine.ObservableObject {
  public init(adUnitId: Swift.String, domain: Swift.String, backgroundColor: SwiftUI.Color? = nil)
  final public func loadAd(withCustomTargetingParameters: [Swift.String : Swift.String]? = nil, event: @escaping (VisxSwiftUISDK.VisxEvents) -> Swift.Void = { _ in })
  final public func showAd()
  public typealias ObjectWillChangePublisher = Combine.ObservableObjectPublisher
  @objc deinit
}
public enum VisxEvents : Swift.String {
  case visxAdViewDidInitialize
  case visxAdViewSizeChange
  case visxAdViewEffectChange
  case visxLandingPageOpened
  case visxAdViewClosed
  case visxAdViewClicked
  case visxAdVideoFinished
  case visxAdRequestStarted
  case visxAdInterstitialClosed
  case visxAdInterstitialWillBeClosed
  case visxAdResponseReceived
  case visxAdFailedWithError
  case appShouldResumeFromAd
  case appShouldSuspendForAd
  case visxAdViewDeallocated
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
extension VisxSwiftUISDK.VisxEvents : Swift.Equatable {}
extension VisxSwiftUISDK.VisxEvents : Swift.Hashable {}
extension VisxSwiftUISDK.VisxEvents : Swift.RawRepresentable {}
